=> webserver

=> Step 1 : Updare Your System 

    sudo apt-get update 
    sudo apt-get upgrade -y


------------------------------------------------------

=> Step 2 : Install Apache 

    sudo apt install apache2 

    Question : Do you want to continue? [y/n] y 

    Config : /etc/apache2/apache2.conf                  The main configuration file is located

    sudo a2enmod rewrite                    (a2enmod = apache enable moad)     to enable URL rewritting , you can enable the mode rewrite module
    sudo systemctl restart apache2 

    Note :  sudo systemctl status apache2       ( to check apache is running or not)
            sudo systemctl enable apache2       (if you didn't enable, you can use this command)
            sudo systemctl stop apache2 
            sudo systemctl start apache2 
            sudo systemctl restart apache2 

------------------------------------------------------

=> Step 3 : Manage Firewall 

    ufw status 
        sudo ufw enable                 [in this step don't turn off terminal]

    ufw status 
        sudo ufw allow ssh 
        sudo ufw allow 3306             for mysql port 


    ufw app list 
        sudo ufw allow 'Apache'             to allow HTTP traffic on port : 80 
        sudo ufw allow 'Apache Secure'      to allow HTTPS traffic on port : 3306
        sudo ufw allow 'Apache Full'        to allow both HTTP and HTTPS traffic 


        sudo ufw status 
        sudo ufw reload 

------------------------------------------------------

=> Step 4 : Install MySQL     (in real work, doesn't need to install in cloud)

    sudo apt install mysql-server 

    Question : Do you want to continute? [y/n] y 

        sudo mysql_secure_installation 

    Question : Press y|Y for yes, any other key for No : n
                Remove anonymous users? (Press y|Y for Yes, any other key for No) : y
                Disallow root login remotely? (Press y|Y for yes, any other key for No) : n 
                Renove test database and access to it? (Press y|Y for yes, any other key for No) : y 
                Reload privilege tables now ? (Press y|Y for yes, any other key for No) : y 



        Note : sudo systemctl status mysql                  check MySQL status  
                sudo systemctl start mysql 

        Note : mysql --version                                  Check Version Without Login
                sudo mysql          or    sudo mysql -u root 
                SELECT version();                                Check Version Without Login
                exit                or    \q

------------------------------------------------------


=> Step 5 : Install PHP 

    sudo apt install software-properties-common
    sudo apt install php         php -v         or     php -version

Question : Do you want to continue? [y/n] y 

    sudo nano /var/www/html/info.php 

    <?php 
        phpinfo();
    ?>

    Test : enter this url to your browser http://yourserverip/info.php

------------------------------------------------------

=> Step 6 : Install phpMyadmin    [it shoult not to be installed in real work ]

    sudo apt install phpmyadmin 

Question : Do you want to continue? [y/n] y 
            Configuring phpMyadmin          Note : move cursor top/bottom arrow key, choose spacebar, tab change mode
            Configure database for phpmyadmin with dbconfig-common? y 
            MySQL application password for phpmyadmin : mydbserver2024

    sudo systemctl restart apache2 


    Test : enter this url to your browser http://yourserverip/info.php

------------------------------------------------------

=> Step 7 : Set password For Root Account (For Mysql 8.0 and later versions)

            sudo mysql -u root

            ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'mydbserver2025';

            GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' WITH GRANT OPTION;

            FLUSH PRIVILEGES;

            exit    (or)  \q

            mysql -u root -p -h yourserverip                    (-u = usrename , -p = password , -h = host)
            mysql -u root -p -h 139.59.230.166                          // access deny (cuz your root account don't have remote permission )

    Note : never access remote permission in root account
------------------------------------------------------

=> Step 8 : Configure Database Remote Access (Optional)

    sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf                        //Edit mysql configuration 

    bind-address : 127.0.0.1                                            // find this line 
    bind-address : 0.0.0.0                                              // and change it to 

    sudo systemctl restart mysql 

    sudo mysql -u root -p 
    mydbserver2025


    CREATE USER 'user1'@'%' IDENTIFIED BY 'userdbserver2025';

    GRANT ALL PRIVILEGES ON *.* TO 'user1'@'%' WITH GRANT OPTION;

    FLUSH PRIVILEGES;

    exit;

    [
        CREATE USER 'thatpaing'@'%' IDENTIFIED BY 'thatpaingdbserver2025';
        GRANT ALL PRIVILEGES ON *.* TO 'thatpaing'@'%' WITH GRANT OPTION;
        FLUSH PRIVILEGES;
        EXIT;
    ]


    mysql -u root -p -h userserverip                        // access deny (cuz root account donsn't have remote permission)\

    mysql -u user1 -p -h userserverip                       // access ( cuz user1 account have access permission)




    Linux = ping 192.160.100.1
            ifconfig  / route
            traceroute 192.168.100.0                    // need to install sudo apt install traceroute if doesn't exist
            whois 192.168.100.0                         // need to install sudo apt install whois  if doens't exist

    Windows =   ping 192.168.100.1     (or) ping 192.168.100.1 -t
                ipconfig 
                tracert 192.168.100.0
                nslookup 192.168.100.0



    localhost/phpmyadmin 
    http://localhost/
    http://localhost/phpmyadmin



     



------------------------------------------------------

=> Step 9 : Connect DNS Server (Domain Name Server)

    continue to Cloud Computing class 

------------------------------------------------------

=> Step 10 : SSL Certificate

    continue to Cloud Computing class 

------------------------------------------------------

=> Step 11 : Other 

    => git 

        sudo apt-get install git

        git -v                      git version 2.45.2


    ------------------------------------------------------


    => composer 

        https://getcomposer.org/download/

        php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
        php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
        php composer-setup.php
        php -r "unlink('composer-setup.php');"

        sudo mv composer.phar /usr/local/bin/composer 

        composer

    ------------------------------------------------------

    => nodejs  (node -v)

        https://nodejs.org/en/download/package-manager

        sudo apt install curl 

    => nvm   (nvm -v)

        https://github.com/nvm-sh/nvm

        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash

        export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

        source ~/.bashrc

        nvm -v 


        => node 

            nvm install 22 

            node -v                     // v22.3.0
            npm -v                      // 10.8.1


        => Set node version (Optional)

            nvm ls      (or)   nvm list        (or)    nvm list-remote 

            eg  (update to use) nee to check version in official website

                nvm intall v22.3.0
                num use v22.3.0 
                nvm alias default v22.3.0

            eg. (downgrade to use )

                nvm install v20.14.0    (if the version is out of date , )
                nvm use v20.14.0
                nvm alias default v20.14.0


    => npm


    node



------------------------------------------------------

=> Uninstall Apache 
    
    sudo systemctl status apache2 
    sudo systemctl stop apache2 

    sudo apt-get purge apache2 
    sudo apt-get autoremove 
    sudo apt-get autoclean

    -> Remove any remaining configuration files and directories 
        sudo rm -rf /etc/apache2 
        sudo rm -rf /var/www/html 

        sudo systemctl status apache2 

------------------------------------------------------

=> Uninstall Mysql 

    sudo systemctl status mysql 
    sudo systemctl stop mysql 

    sudo apt-get purge mysql-server
    sudo apt-get autoremove 
    sudo apt-get autoclean

    -> Remove any remaining configuration files and directories 
        sudo rm -rf /etc/mysql
        sudo rm -rf /var/lib/mysql
        sudo rm -rf /var/log/mysql 

------------------------------------------------------

=> Uninstall PHP 
    sudo apt remove 'php*'
    sudo apt purge 'php*'

    sudo apt-get update 
    sudo apt-get upgrade 


------------------------------------------------------

=> Uninstall Nodejs 

    sudo apt remote nodejs 
    sudo apt remove npm 

------------------------------------------------------

